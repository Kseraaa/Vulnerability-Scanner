import nmap
import requests

# ฟังก์ชันเพื่อดึงข้อมูลช่องโหว่จาก CVE
def get_cve_info(service, version):
    url = f"https://cve.circl.lu/api/search/{service}/{version}"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()
    return []

# ฟังก์ชันเพื่อสแกนพอร์ตและดึงข้อมูลเวอร์ชันซอฟต์แวร์
def scan_ports(host):
    nm = nmap.PortScanner()
    nm.scan(host, '22-443')
    scan_data = {'host': host, 'ports': [], 'vulnerabilities': []}

    for proto in nm[host].all_protocols():
        lport = nm[host][proto].keys()
        for port in lport:
            service = nm[host][proto][port]['name']
            version = nm[host][proto][port]['version']
            state = nm[host][proto][port]['state']
            port_info = {'port': port, 'state': state, 'service': service, 'version': version}
            scan_data['ports'].append(port_info)

            # ดึงข้อมูลช่องโหว่
            cve_info = get_cve_info(service, version)
            for item in cve_info:
                scan_data['vulnerabilities'].append({
                    'cve_id': item['id'],
                    'summary': item['summary']
                })

    return scan_data

# เรียกใช้งานฟังก์ชันเพื่อสแกน
host = '127.0.0.1'
scan_data = scan_ports(host)
print(scan_data)
